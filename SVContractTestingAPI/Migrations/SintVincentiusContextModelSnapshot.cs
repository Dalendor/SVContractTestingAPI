// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SVContractTestingAPI.Data;

#nullable disable

namespace SVContractTestingAPI.Migrations
{
    [DbContext(typeof(SintVincentiusContext))]
    partial class SintVincentiusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SVContractTestingAPI.Models.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2026, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1783),
                            FamilyId = 1,
                            IssueDate = new DateTime(2024, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1780),
                            Title = "Voedselattest"
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(2026, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1789),
                            FamilyId = 1,
                            IssueDate = new DateTime(2024, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1787),
                            Title = "Pamperattest"
                        },
                        new
                        {
                            Id = 3,
                            ExpiryDate = new DateTime(2026, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1792),
                            FamilyId = 2,
                            IssueDate = new DateTime(2024, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1791),
                            Title = "Voedselattest"
                        });
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kerkstraat 1",
                            Name = "Familie Janssens"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Schoolstraat 5",
                            Name = "Familie Peeters"
                        });
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("FamilyMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamilyId = 1,
                            Name = "Jan Janssens"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1982, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamilyId = 1,
                            Name = "Marie Janssens"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1975, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamilyId = 2,
                            Name = "Tom Peeters"
                        });
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.FoodProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2025, 11, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1634),
                            Name = "Pasta",
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(2026, 5, 28, 12, 17, 1, 312, DateTimeKind.Local).AddTicks(1693),
                            Name = "Conservenbonen",
                            Quantity = 30
                        });
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "anna@example.com",
                            Name = "Anna Vermeulen",
                            PhoneNumber = "0471234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bart@example.com",
                            Name = "Bart De Vries",
                            PhoneNumber = "0487654321"
                        });
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.Certificate", b =>
                {
                    b.HasOne("SVContractTestingAPI.Models.Family", "Family")
                        .WithMany("Certificates")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.FamilyMember", b =>
                {
                    b.HasOne("SVContractTestingAPI.Models.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("SVContractTestingAPI.Models.Family", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
